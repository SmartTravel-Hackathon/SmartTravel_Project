// Generated by view binder compiler. Do not edit!
package com.example.hackaton.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hackaton.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegistrarseTuristaBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final RadioButton radioAgency;

  @NonNull
  public final RadioGroup radioGroupUserType;

  @NonNull
  public final RadioButton radioTourist;

  @NonNull
  public final TextView textAlreadyHaveAccount;

  @NonNull
  public final TextView textLogin;

  @NonNull
  public final TextView textRegisterTitle;

  @NonNull
  public final TextView textTermsConditions;

  @NonNull
  public final TextView textUserType;

  private RegistrarseTuristaBinding(@NonNull RelativeLayout rootView,
      @NonNull Button buttonRegister, @NonNull EditText editTextEmail,
      @NonNull EditText editTextName, @NonNull EditText editTextPassword,
      @NonNull RadioButton radioAgency, @NonNull RadioGroup radioGroupUserType,
      @NonNull RadioButton radioTourist, @NonNull TextView textAlreadyHaveAccount,
      @NonNull TextView textLogin, @NonNull TextView textRegisterTitle,
      @NonNull TextView textTermsConditions, @NonNull TextView textUserType) {
    this.rootView = rootView;
    this.buttonRegister = buttonRegister;
    this.editTextEmail = editTextEmail;
    this.editTextName = editTextName;
    this.editTextPassword = editTextPassword;
    this.radioAgency = radioAgency;
    this.radioGroupUserType = radioGroupUserType;
    this.radioTourist = radioTourist;
    this.textAlreadyHaveAccount = textAlreadyHaveAccount;
    this.textLogin = textLogin;
    this.textRegisterTitle = textRegisterTitle;
    this.textTermsConditions = textTermsConditions;
    this.textUserType = textUserType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegistrarseTuristaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegistrarseTuristaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.registrarse_turista, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegistrarseTuristaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_register;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.edit_text_email;
      EditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.edit_text_name;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.edit_text_password;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.radio_agency;
      RadioButton radioAgency = ViewBindings.findChildViewById(rootView, id);
      if (radioAgency == null) {
        break missingId;
      }

      id = R.id.radio_group_user_type;
      RadioGroup radioGroupUserType = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupUserType == null) {
        break missingId;
      }

      id = R.id.radio_tourist;
      RadioButton radioTourist = ViewBindings.findChildViewById(rootView, id);
      if (radioTourist == null) {
        break missingId;
      }

      id = R.id.text_already_have_account;
      TextView textAlreadyHaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (textAlreadyHaveAccount == null) {
        break missingId;
      }

      id = R.id.text_login;
      TextView textLogin = ViewBindings.findChildViewById(rootView, id);
      if (textLogin == null) {
        break missingId;
      }

      id = R.id.text_register_title;
      TextView textRegisterTitle = ViewBindings.findChildViewById(rootView, id);
      if (textRegisterTitle == null) {
        break missingId;
      }

      id = R.id.text_terms_conditions;
      TextView textTermsConditions = ViewBindings.findChildViewById(rootView, id);
      if (textTermsConditions == null) {
        break missingId;
      }

      id = R.id.text_user_type;
      TextView textUserType = ViewBindings.findChildViewById(rootView, id);
      if (textUserType == null) {
        break missingId;
      }

      return new RegistrarseTuristaBinding((RelativeLayout) rootView, buttonRegister, editTextEmail,
          editTextName, editTextPassword, radioAgency, radioGroupUserType, radioTourist,
          textAlreadyHaveAccount, textLogin, textRegisterTitle, textTermsConditions, textUserType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
